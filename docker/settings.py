"""
Django settings for sampleproj project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

from project.base_settings import *
from django.urls import reverse_lazy

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS += [
    'webpack_loader',
    'foodalert',
    'rest_framework',
    'phonenumber_field'
    'dbmail',
    'premailer',
    'django.contrib.sites',
]

SITE_ID = 1

#TODO: override MIDDLEWARE or just add to django-container's?
MIDDLEWARE = [
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
]

MIDDLEWARE += [
    'django_user_agents.middleware.UserAgentMiddleware'
    'django.contrib.auth.middleware.PersistentRemoteUserMiddleware',
]

WSGI_APPLICATION = 'docker.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'USER': 'postgres',
        'HOST': 'db',
        'PORT': 5432,
    }
}

CACHES = {
    "default": {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake'
    },
}

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': ('django.contrib.auth.password_validation'
                 '.UserAttributeSimilarityValidator'),
    },
    {
        'NAME': ('django.contrib.auth.password_validation'
                 '.MinimumLengthValidator'),
    },
    {
        'NAME': ('django.contrib.auth.password_validation'
                 '.CommonPasswordValidator'),
    },
    {
        'NAME': ('django.contrib.auth.password_validation'
                 '.NumericPasswordValidator'),
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

WEBPACK_LOADER = {
    'DEFAULT': {
        'CACHE': not DEBUG,
        'BUNDLE_DIR_NAME': 'foodalert/bundles/',  # must end with slash
        'STATS_FILE': os.path.join(BASE_DIR, 'project', 'webpack-stats.json'),
        'POLL_INTERVAL': 0.1,
        'TIMEOUT': None,
        'IGNORE': [r'.+\.hot-update.js', r'.+\.map']
    }
}

# AWS Config for Boto3
AWS_ACCESS_KEY_ID = ''
AWS_SECRET_ACCESS_KEY = ''
AWS_MESSAGE_ATTRIBUTES = {
    'SMSType': 'Promotional',
    'MaxPrice': '0.50',
    'mySenderID': 'foodalert'
}
#Optional AWS session token & config/credentials files
# AWS_TOPIC_ARN = 'arn:aws:sns:us-west-2:nums:topic'
#AWS_SESSION_TOKEN = ''
#AWS_SHARED_CREDENTIALS_FILE = 'path/to/aws/credentials'
#AWS_CONFIG_FILE = 'path/to/aws/config'

# Twilio Configuration Settings
# Note: These must be set (to anything) for tests to work
TWILIO_ACCOUNT_SID = "XXX"
TWILIO_AUTH_TOKEN = "XXX"
TWILIO_NOTIFY_SERVICE_ID = "XXX"
TWILIO_FROM = ""

LOGIN_URL = reverse_lazy('saml_login')
LOGOUT_URL = reverse_lazy('saml_logout')

MOCK_SAML_ATTRIBUTES['isMemberOf'] = ['u_test_host', 'u_test_admin']

FOODALERT_AUTHZ_GROUPS = {
    'create': 'u_test_host',
    'audit': 'u_test_admin'
}
# Django email settings
EMAIL_BACKEND='django.core.mail.backends.console.EmailBackend'
EMAIL_HOST= 'localhost'
# Settings to send a real email
# EMAIL_BACKEND='saferecipient.EmailBackend'
# EMAIL_HOST= 'smtp.washington.edu'
# EMAIL_PORT= 587
# EMAIL_HOST_USER = 'notarealaddress@uw.edu'
# EMAIL_HOST_PASSWORD = 'mypassword'
# EMAIL_USE_TLS = True

# Django-saferecipient-email-backend settings
SAFE_EMAIL_RECIPIENT='notarealaddress@uw.edu'
